---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: usb-camera-viewer
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-6"
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list","patch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: usb-camera-viewer-sa
  namespace: default
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-6"
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: usb-camera-viewer-binding
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-6"
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
subjects:
  - kind: ServiceAccount
    name: usb-camera-viewer-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: usb-camera-viewer
  apiGroup: rbac.authorization.k8s.io
---
# templates/pre-install-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: pre-install-job
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  template:
    spec:
      serviceAccountName: usb-camera-viewer-sa
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/agent
                    operator: DoesNotExist
      hostPID: true
      containers:
        - name: pre-install-container
          image: bitnami/kubectl
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - |
              {{- range $.Values.global.nodeSelectorAndDevPath.mapper  }}
              kubectl label nodes {{ .edgeNode }}  edgeNode={{.edgeNode}} --overwrite
              {{ end }}
          securityContext:
            privileged: true  # 设置容器为特权容器，以便执行 hostPID 操作
      restartPolicy: OnFailure

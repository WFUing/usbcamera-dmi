# 第一阶段：构建 Go 二进制文件
FROM golang:1.17-alpine AS builder

WORKDIR /build

ENV GO111MODULE=on \
    GOPROXY=https://goproxy.cn,direct

# 复制项目代码到工作目录
COPY . .

# 构建二进制文件，关闭 CGO，并指定编译目标为 linux
RUN CGO_ENABLED=0 GOOS=linux go build -gcflags "all=-N -l" -o main cmd/main.go

# 第二阶段：构建最终镜像，基于 Ubuntu 16.04，并安装网络监测工具
FROM ubuntu:16.04

# 更新 apt 包索引并安装 netstat（net-tools）、ss（iproute2）和 lsof 工具
RUN apt-get update && \
    apt-get install -y net-tools iproute2 lsof curl && \
    rm -rf /var/lib/apt/lists/*

# 创建工作目录
RUN mkdir -p kubeedge

# 将构建好的二进制文件和配置文件复制到工作目录中
COPY --from=builder /build/main kubeedge/
COPY ./config.yaml kubeedge/

# 设置工作目录
WORKDIR kubeedge

# 设置容器启动时运行的程序（这里假设 main 是服务入口）
#CMD ["./main"]
